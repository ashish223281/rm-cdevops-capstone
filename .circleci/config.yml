version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3
  kubernetes: circleci/kubernetes@0.11.2


executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  lint:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint

  build:
    machine: true
    working_directory: ~/project

    steps:
      - checkout
      - run:
          name: build and push tag
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
            docker build -t fmmrm/rm-capstone-${CIRCLE_WORKFLOW_ID} .
            docker push fmmrm/rm-capstone-${CIRCLE_WORKFLOW_ID}
            docker tag fmmrm/rm-capstone-${CIRCLE_WORKFLOW_ID} fmmrm/rm-capstone:latest
            docker push fmmrm/rm-capstone:latest

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
         rm-capstone project
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yaml
          resource-name: deployment/rm-capstone
      - run:
          name: check cluster
          command: |
            kubectl get svc
            kubectl get nodes -o wide
            kubectl get pods
            kubectl get deployment


workflows:
  default:
    jobs:
      - lint
      - build:
          requires:
            - lint
      - aws-eks/create-cluster:
          cluster-name: rm-capstone
      - create-deployment:
          cluster-name: rm-capstone
          requires:
            - aws-eks/create-cluster
      - aws-eks/update-container-image:
          cluster-name: rm-capstone
          container-image-updates: 'nginx=nginx:1.21.1'
          post-steps:
            - kubernetes/delete-resource:
                resource-names: deployment/rm-capstone
                resource-types: deployment
                wait: true
          record: true
          requires:
            - create-deployment
          resource-name: deployment/rm-capstone
      - aws-eks/delete-cluster:
          cluster-name: rm-capstone
          requires:
            - aws-eks/update-container-image
